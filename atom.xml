<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[wlog]]></title>
  <link href="http://whhotw.github.io/atom.xml" rel="self"/>
  <link href="http://whhotw.github.io/"/>
  <updated>2018-08-10T15:51:00+08:00</updated>
  <id>http://whhotw.github.io/</id>
  <author>
    <name><![CDATA[w]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TextInput Cannot Blur on Press Back Button of Android]]></title>
    <link href="http://whhotw.github.io/blog/2018/08/10/textinput-cannot-blur-on-press-back-button-of-android/"/>
    <updated>2018-08-10T15:23:19+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/08/10/textinput-cannot-blur-on-press-back-button-of-android</id>
    <content type="html"><![CDATA[<p>先說一下我是在 RN 0.51，搞不好新版本不會有這問題&hellip;</p>

<p>在 Android 平台上遇到的一個小小問題，需求是這樣的，畫面上有 4 個輸入框，我不希望使用者可以手動點擊要輸入的框框是哪一個，因此我鎖住 touch event (用一個 View 遮住)，然後透過 event 來取得 focus。</p>

<p>在 iOS 沒問題，行為都是我預期的那樣，使用者可以透過我準備的按鈕把鍵盤彈起，但在 Android 的時候，假如使用者按 Back Button 把鍵盤收起來（或是系統的行為。如：收到簡訊），就無法在彈起了&hellip;</p>

<p>這是為什麼呢？</p>

<p>就我實驗的結果發現，假如使用者不是自己按下鍵盤上的<a href="https://cdn.wccftech.com/wp-content/uploads/2016/12/Google-Gboard-Keyboard-app.jpg">完成</a>，讓鍵盤收起。<code>TextInput</code> 事實上並不會 <code>call blur()</code></p>

<p>什麼意思呢？</p>

<blockquote><p>簡單的說即是焦點並沒有消失，導致下次就算 <code>call focus()</code> 也並不會有 <code>state</code> 的改變</p></blockquote>

<p>為了解決這問題，我的方法是監聽鍵盤被收起的時候，手動 <code>blur()</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class AAA {
</span><span class='line'>  componentDidMount() {
</span><span class='line'>      this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  componentWillUnmount() {
</span><span class='line'>    this.keyboardDidHideListener.remove();
</span><span class='line'>  }
</span><span class='line'>  
</span><span class='line'>  keyboardDidHide = () =&gt; {
</span><span class='line'>      this.input.blur();
</span><span class='line'>  };
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Turn on WebView Debug on Android]]></title>
    <link href="http://whhotw.github.io/blog/2018/08/07/turn-on-webview-debug-on-android/"/>
    <updated>2018-08-07T17:51:02+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/08/07/turn-on-webview-debug-on-android</id>
    <content type="html"><![CDATA[<p><a href="https://developers.google.com/web/tools/chrome-devtools/remote-debugging/webviews">官方文件</a></p>

<p>在 activity 起來的時候 enable</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@Override
</span><span class='line'>  public void onCreate() {
</span><span class='line'>  super.onCreate();
</span><span class='line'>  SoLoader.init(this, /* native exopackage */ false);
</span><span class='line'>  WebView.setWebContentsDebuggingEnabled(true);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Abort Fetch API]]></title>
    <link href="http://whhotw.github.io/blog/2018/08/01/abort-fetch-api/"/>
    <updated>2018-08-01T21:46:22+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/08/01/abort-fetch-api</id>
    <content type="html"><![CDATA[<p>在 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</a> 中並沒有原生提供中斷請求的方法。但假設遇到並行事件時，需要取消前一個請求可以怎麼做呢？這時候就可以實作 <code>Promise</code> 的物件來解決</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>const promise = new Promise(function (resolve, reject) {
</span><span class='line'>  const f = fetch(url, options).then((res) =&gt; {
</span><span class='line'>    if (!res.ok) {
</span><span class='line'>      reject(new Error('something wrong'));
</span><span class='line'>    } else {
</span><span class='line'>      // resolve(res.json());
</span><span class='line'>      resolve('it's work');
</span><span class='line'>    }
</span><span class='line'>  });
</span><span class='line'>
</span><span class='line'>  f.abort = function () {
</span><span class='line'>    reject(new Error('abort error'));
</span><span class='line'>  };
</span><span class='line'>
</span><span class='line'>  return f;
</span><span class='line'>});
</span><span class='line'>    
</span><span class='line'>promise.then((res) =&gt; {
</span><span class='line'>  console.log(res); // it's work
</span><span class='line'>}).catch(e =&gt; {
</span><span class='line'>  console.error(e); // something wrong or abort error
</span><span class='line'>});
</span><span class='line'>
</span><span class='line'>// call this before resolve
</span><span class='line'>promise.abort();</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No Bundle Url Present: When the React Packager Tab Is Closed]]></title>
    <link href="http://whhotw.github.io/blog/2018/07/27/no-bundle-url-present-when-the-react-packager-tab-is-closed/"/>
    <updated>2018-07-27T18:17:11+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/07/27/no-bundle-url-present-when-the-react-packager-tab-is-closed</id>
    <content type="html"><![CDATA[<p>當 Info.plist 中設定成下圖時，可能會無法在 DEBUG 模式下正常執行</p>

<p><img src="http://whhotw.github.io/assets/Screen-Shot-2018-07-27.png" width="1080" height="1920"></p>

<p>解決辦法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>remove "Allow Arbitrary Loads in Web Content"</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React-native-webrtc Crash on Running Device]]></title>
    <link href="http://whhotw.github.io/blog/2018/05/24/react-native-webrtc-crash-on-running-device/"/>
    <updated>2018-05-24T16:05:35+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/05/24/react-native-webrtc-crash-on-running-device</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/oney/react-native-webrtc">react-native-webrtc</a> 跑在安卓實機的時候一直閃退，找了好久終於找到解法</p>

<p><a href="https://github.com/oney/react-native-webrtc/issues/230">參考這個issues</a></p>

<p>proguard rule 裡面加入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-keep class org.webrtc.** { *; }</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Number() vs parseInt()]]></title>
    <link href="http://whhotw.github.io/blog/2018/05/09/number-vs-parseint/"/>
    <updated>2018-05-09T17:58:06+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/05/09/number-vs-parseint</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>parseInt('123', 10) // 123
</span><span class='line'>parseInt('123abc', 10) // 123
</span><span class='line'>parseInt(undefined, 10) // NaN
</span><span class='line'>parseInt(null, 10) // NaN
</span><span class='line'>parseInt('', 10) // NaN
</span><span class='line'>Number('123') // 123
</span><span class='line'>Number('123abc', 10) // NaN
</span><span class='line'>Number(undefined) // NaN
</span><span class='line'>Number(null) // 0
</span><span class='line'>Number('') // 0</span></code></pre></td></tr></table></div></figure>


<p>數字轉字串</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>String(123) // "123"
</span><span class='line'>`123` // "123"
</span><span class='line'>
</span><span class='line'>let a = 123;
</span><span class='line'>a.toString() // "123"</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RN WebView of Android Release Build Load Local HTML]]></title>
    <link href="http://whhotw.github.io/blog/2018/04/16/rn-webview-of-android-release-build-load-local-html/"/>
    <updated>2018-04-16T11:52:04+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/04/16/rn-webview-of-android-release-build-load-local-html</id>
    <content type="html"><![CDATA[<p><code>RN</code> 中的 WebView 可以使用 <code>require()</code> 讀取靜態的 HTML 檔案。但是安卓的 <code>release</code> 階段要用 <code>file:///android_asset/xxx</code> 的寫法，否則會無法正常執行</p>

<p>靜態檔案放在 android project 的 assets 底下</p>

<p><img src="http://whhotw.github.io/assets/ScreenShot2018-04-16at1157.png" width="1080" height="1920"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keyboard Issues With React-native-gifted-chat]]></title>
    <link href="http://whhotw.github.io/blog/2018/04/03/keyboard-issues-with-react-native-gifted-chat/"/>
    <updated>2018-04-03T14:13:35+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/04/03/keyboard-issues-with-react-native-gifted-chat</id>
    <content type="html"><![CDATA[<p>使用 <code>react-native-gifted-chat</code> 假如有同時使用 <code>react-native-keyboard-manager</code> 在設定的時候記得 <code>setEnable(false)</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if (Platform.OS === 'ios') {
</span><span class='line'>  if (__DEV__) {
</span><span class='line'>    KeyboardManager.setEnableDebugging(true);
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  KeyboardManager.setEnable(false); // do not using it's
</span><span class='line'>  KeyboardManager.setKeyboardDistanceFromTextField(10);
</span><span class='line'>  KeyboardManager.setPreventShowingBottomBlankSpace(true);
</span><span class='line'>  KeyboardManager.setEnableAutoToolbar(true);
</span><span class='line'>  KeyboardManager.setToolbarManageBehaviour(0);
</span><span class='line'>  KeyboardManager.setShouldToolbarUsesTextFieldTintColor(false);
</span><span class='line'>  KeyboardManager.setToolbarPreviousNextButtonEnable(true);
</span><span class='line'>  KeyboardManager.setShouldShowTextFieldPlaceholder(true);
</span><span class='line'>  KeyboardManager.setOverrideKeyboardAppearance(false);
</span><span class='line'>  KeyboardManager.setShouldResignOnTouchOutside(false);
</span><span class='line'>  KeyboardManager.resignFirstResponder();
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fetch API Content-Type]]></title>
    <link href="http://whhotw.github.io/blog/2018/03/20/fetch-api-content-type/"/>
    <updated>2018-03-20T09:38:46+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/03/20/fetch-api-content-type</id>
    <content type="html"><![CDATA[<p>最近用到 js 中的 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">fetch</a> 發現 <code>Content-Type</code> 會因為參數而改變</p>

<p>例如</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>const options = {
</span><span class='line'>  method,
</span><span class='line'>  headers: {
</span><span class='line'>    Accept: 'application/json',
</span><span class='line'>    'Content-Type': 'application/json', // 指定
</span><span class='line'>  },
</span><span class='line'>  body: params, // 第二張圖
</span><span class='line'>  // body: JSON.stringify(params), // 第一張圖
</span><span class='line'>};
</span><span class='line'>    
</span><span class='line'>return fetch(url, options)
</span><span class='line'>  .then((res) =&gt; {
</span><span class='line'>    if (!res.ok) {
</span><span class='line'>      throw new Error('請檢查網路連線');
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    return res.json();
</span><span class='line'>  });</span></code></pre></td></tr></table></div></figure>


<p>假如 <code>params</code> 沒有用 <code>JSON.stringify</code> 的話，實際傳出去的 <code>Content-Type</code> 不一定是 <code>application/json</code></p>

<p>我用 wireshark 做的實驗</p>

<p><img src="http://whhotw.github.io/assets/Screen%20Shot%202018-03-20%20at%2009.44.19.png" width="1080" height="1920"></p>

<p><img src="http://whhotw.github.io/assets/Screen%20Shot%202018-03-20%20at%2009.44.05.png" width="1080" height="1920"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[印出 OSX 上的模擬器]]></title>
    <link href="http://whhotw.github.io/blog/2018/03/14/yin-chu-osx-shang-de-ios-mo-ni-qi-qing-dan/"/>
    <updated>2018-03-14T11:04:15+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/03/14/yin-chu-osx-shang-de-ios-mo-ni-qi-qing-dan</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>▶ xcrun simctl list devices
</span><span class='line'>== Devices ==
</span><span class='line'>-- iOS 9.3 --
</span><span class='line'>-- iOS 10.1 --
</span><span class='line'>-- iOS 11.2 --
</span><span class='line'>    iPhone 8 (C34476E5-474D-4295-B113-07A1C9A58F7C) (Booted)
</span><span class='line'>    iPhone 8 Plus (7D2939FA-6C7C-4ECC-91BA-B81245193273) (Shutdown)
</span><span class='line'>    iPhone SE (F6FC4EB2-57A8-43A5-B3DF-3C2D0D86EAB5) (Shutdown)
</span><span class='line'>    iPhone X (CF6EAD3A-D89A-416B-9E22-A9FEE01FABC0) (Shutdown)
</span><span class='line'>-- tvOS 11.2 --
</span><span class='line'>-- watchOS 4.2 --
</span><span class='line'>    Apple Watch - 38mm (762755FE-F880-4D3F-AC59-5273E136AA22) (Shutdown)
</span><span class='line'>    Apple Watch - 42mm (9C46B910-2347-4632-87C1-4CB7C146A7DA) (Shutdown)
</span><span class='line'>    Apple Watch Series 3 - 38mm (1636D402-593A-4E43-8936-5F8269FC8E06) (Shutdown)
</span><span class='line'>    Apple Watch Series 3 - 42mm (F44308B7-7EE5-451E-A5BE-47C4AF6D2182) (Shutdown)
</span><span class='line'>-- Unavailable: com.apple.CoreSimulator.SimRuntime.iOS-10-3 --
</span><span class='line'>    iPhone 7 Plus (93B3F053-7A69-462B-995C-FDBB0DECD696) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    iPad Air (D32532AE-CAD0-4A33-B5C3-D7D6603CD14A) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>-- Unavailable: com.apple.CoreSimulator.SimRuntime.iOS-11-1 --
</span><span class='line'>    iPad Air (458272DE-23F5-4402-9499-38D34EE0C2C4) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>-- Unavailable: com.apple.CoreSimulator.SimRuntime.watchOS-3-1 --
</span><span class='line'>    Apple Watch - 38mm (F517E442-BA3D-414E-8AC6-DC3DADEBBBA5) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    Apple Watch - 42mm (77DAED46-0C55-4BF1-BEFB-29CFBF1878B9) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    Apple Watch Series 2 - 38mm (3BC9851A-B5F0-4388-AB2F-970615C09131) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    Apple Watch Series 2 - 42mm (D96A8FAE-A911-4F6E-B410-394F612D72A5) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>-- Unavailable: com.apple.CoreSimulator.SimRuntime.watchOS-3-2 --
</span><span class='line'>    Apple Watch - 38mm (79FE64E2-6561-460D-B3B2-85D6E27E504C) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    Apple Watch - 42mm (FAEC2DB5-99B5-406A-A9B9-2CCD0280802B) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    Apple Watch Series 2 - 38mm (56BE61D3-3CDD-44CD-A383-C4B72F862A7F) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    Apple Watch Series 2 - 42mm (D01D1358-9E50-4DCC-B1A0-58A1AED5A57A) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>-- Unavailable: com.apple.CoreSimulator.SimRuntime.watchOS-4-1 --
</span><span class='line'>    Apple Watch - 38mm (83E57EAD-BC33-4ADA-AC43-C70DE030CB13) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    Apple Watch - 42mm (45F4AB4B-CEFB-4F88-8ADD-B491E8AEDB51) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    Apple Watch Series 2 - 38mm (DE82F3F9-0B17-4914-A146-CE8B047A0D32) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    Apple Watch Series 2 - 42mm (1B69D57E-707E-4458-9A38-0142FADE86B4) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    Apple Watch Series 3 - 38mm (8F4B32E9-EBC3-46F8-B1A1-F30C8D863F65) (Shutdown) (unavailable, runtime profile not found)
</span><span class='line'>    Apple Watch Series 3 - 42mm (586539F8-FE12-4354-A102-3A17F71E867A) (Shutdown) (unavailable, runtime profile not found)</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React Native Navigation 顯示 Modal 透明背景]]></title>
    <link href="http://whhotw.github.io/blog/2018/03/08/react-native-navigation-xian-shi-m-tou-ming-bei-jing/"/>
    <updated>2018-03-08T19:15:14+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/03/08/react-native-navigation-xian-shi-m-tou-ming-bei-jing</id>
    <content type="html"><![CDATA[<p>不透明的背景</p>

<p><img src="http://whhotw.github.io/assets/Simulator%20Screen%20Shot%20-%20iPhone%208%20-%202018-03-08%20at%2019.17.36.png" width="360" height="640"></p>

<p>透明的背景</p>

<p><img src="http://whhotw.github.io/assets/Simulator%20Screen%20Shot%20-%20iPhone%208%20-%202018-03-08%20at%2019.27.42.png" width="360" height="640"></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>static navigatorStyle = {
</span><span class='line'>  screenBackgroundColor: 'transparent',
</span><span class='line'>  modalPresentationStyle: 'overFullScreen'
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我自己的 RN 項目配置]]></title>
    <link href="http://whhotw.github.io/blog/2018/03/02/wo-zi-ji-de-rn-xiang-mu-pei-zhi/"/>
    <updated>2018-03-02T01:34:59+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/03/02/wo-zi-ji-de-rn-xiang-mu-pei-zhi</id>
    <content type="html"><![CDATA[<p>記錄一下，建立一個新的 RN 項目時的步驟，每次都會忘記，再加上改版時不時就跑出一推問題，麻煩！這只是我個人有用到一些套件與建立步驟</p>

<h1>CLI</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yarn init ${PROJECT_NAME} --version 0.51.0
</span><span class='line'>yarn add redux-thunk redux-logger redux react-redux react-native-navigation react-native-vector-icons react-native-i18n react-native-elements prop-types
</span><span class='line'>yarn add babel-eslint eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react babel-core@6.0.0 --dev</span></code></pre></td></tr></table></div></figure>


<h1>package.json</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "name": "${PROJECT_NAME}",
</span><span class='line'>  "version": "0.0.1",
</span><span class='line'>  "private": true,
</span><span class='line'>  "scripts": {
</span><span class='line'>    "start": "node node_modules/react-native/local-cli/cli.js start",
</span><span class='line'>    "test": "jest"
</span><span class='line'>  },
</span><span class='line'>  "dependencies": {
</span><span class='line'>    "prop-types": "^15.6.1",
</span><span class='line'>    "react": "16.0.0",
</span><span class='line'>    "react-native": "0.51.0",
</span><span class='line'>    "react-native-elements": "^0.19.0",
</span><span class='line'>    "react-native-i18n": "^2.0.12",
</span><span class='line'>    "react-native-navigation": "^1.1.393",
</span><span class='line'>    "react-native-vector-icons": "^4.5.0",
</span><span class='line'>    "react-redux": "^5.0.7",
</span><span class='line'>    "redux": "^3.7.2",
</span><span class='line'>    "redux-logger": "^3.0.6",
</span><span class='line'>    "redux-thunk": "^2.2.0"
</span><span class='line'>  },
</span><span class='line'>  "devDependencies": {
</span><span class='line'>    "babel-core": "6.0.0",
</span><span class='line'>    "babel-eslint": "^8.2.2",
</span><span class='line'>    "babel-jest": "22.4.1",
</span><span class='line'>    "babel-preset-react-native": "4.0.0",
</span><span class='line'>    "eslint": "^4.18.1",
</span><span class='line'>    "eslint-config-airbnb": "^16.1.0",
</span><span class='line'>    "eslint-plugin-import": "^2.9.0",
</span><span class='line'>    "eslint-plugin-jsx-a11y": "^6.0.3",
</span><span class='line'>    "eslint-plugin-react": "^7.7.0",
</span><span class='line'>    "jest": "22.4.2",
</span><span class='line'>    "react-test-renderer": "16.0.0"
</span><span class='line'>  },
</span><span class='line'>  "jest": {
</span><span class='line'>    "preset": "react-native"
</span><span class='line'>  },
</span><span class='line'>  "rnpm": {
</span><span class='line'>    "assets": [
</span><span class='line'>      "./src/fonts"
</span><span class='line'>    ]
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h1>Directory tree</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>▶ tree -La 1
</span><span class='line'>.
</span><span class='line'>├── .babelrc
</span><span class='line'>├── .buckconfig
</span><span class='line'>├── .eslintrc
</span><span class='line'>├── .flowconfig
</span><span class='line'>├── .gitattributes
</span><span class='line'>├── .gitignore
</span><span class='line'>├── .watchmanconfig
</span><span class='line'>├── __tests__
</span><span class='line'>├── android
</span><span class='line'>├── app.json
</span><span class='line'>├── index.js
</span><span class='line'>├── ios
</span><span class='line'>├── node_modules
</span><span class='line'>├── package.json
</span><span class='line'>├── src
</span><span class='line'>└── yarn.lock</span></code></pre></td></tr></table></div></figure>


<h1>Directory of src tree</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>▶ tree -L 1
</span><span class='line'>.
</span><span class='line'>├── actions
</span><span class='line'>├── components
</span><span class='line'>├── config
</span><span class='line'>├── fonts
</span><span class='line'>├── helpers
</span><span class='line'>├── i18n
</span><span class='line'>├── reducers
</span><span class='line'>└── screens</span></code></pre></td></tr></table></div></figure>


<h1>.eslintrc</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "parser": "babel-eslint",
</span><span class='line'>  "extends": "airbnb",
</span><span class='line'>  "rules": {
</span><span class='line'>    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
</span><span class='line'>    "react/prop-types": [1],
</span><span class='line'>    "no-unused-vars": [1],
</span><span class='line'>    "no-use-before-define": [1, { "functions": true, "classes": true }],
</span><span class='line'>  },
</span><span class='line'>  "globals": {
</span><span class='line'>    "fetch": true,
</span><span class='line'>    "__DEV__": true,
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkins 中 Poll SCM 與 Build Periodically 差異]]></title>
    <link href="http://whhotw.github.io/blog/2018/02/27/jenkins-zhong-poll-scm-yu-build-periodically-chai-yi/"/>
    <updated>2018-02-27T11:00:34+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/02/27/jenkins-zhong-poll-scm-yu-build-periodically-chai-yi</id>
    <content type="html"><![CDATA[<h1>Poll SCM</h1>

<p>固定時間執行（假如代碼有改變）</p>

<p>*/5 * * * * （每 5 分鐘檢查一次）</p>

<h1>Build periodically</h1>

<p>固定時間執行（不管代碼是否改變）</p>

<p>0 2 * * * （每天 AM 2:00 執行一次）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[認識 JWT]]></title>
    <link href="http://whhotw.github.io/blog/2018/02/13/ren-shi-jwt/"/>
    <updated>2018-02-13T13:19:20+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/02/13/ren-shi-jwt</id>
    <content type="html"><![CDATA[<h1>流程圖</h1>

<p><img src="https://stormpath.com/wp-content/uploads/2016/05/Cookie-v-Token-Diagram-v1-3-1024x536.png" alt="" /></p>

<p>左邊是傳統的 <code>cookie-session</code> 的流程，右邊是使用 <code>token</code> 的流程，乍看是很類似的。也因為運作的慨念很類似，所以兩者之間的轉換幾乎沒什麼困難。</p>

<h1><a href="https://jwt.io">JWT</a></h1>

<p>因為我都是在寫 APP 比較多，因此選擇用 <code>token</code> 的機制去解決身份驗證的問題，在實作上會快很多，重點是 <code>lib</code> 人家都寫好了，呵呵</p>

<h2>What is JSON Web Token?</h2>

<blockquote><p>JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA.</p>

<p>Let&rsquo;s explain some concepts of this definition further.</p>

<p>Compact: Because of their smaller size, JWTs can be sent through a URL, POST parameter, or inside an HTTP header. Additionally, the smaller size means transmission is fast.</p>

<p>Self-contained: The payload contains all the required information about the user, avoiding the need to query the database more than once.</p></blockquote>

<p>被定義在<a href="https://tools.ietf.org/html/rfc7519">RFC7519</a>，可使傳輸過程變得安全並有輕量與自我驗證的優勢</p>

<h2>When should you use JSON Web Tokens?</h2>

<blockquote><p>Here are some scenarios where JSON Web Tokens are useful:</p>

<p>Authentication: This is the most common scenario for using JWT. Once the user is logged in, each subsequent request will include the JWT, allowing the user to access routes, services, and resources that are permitted with that token. Single Sign On is a feature that widely uses JWT nowadays, because of its small overhead and its ability to be easily used across different domains.</p>

<p>Information Exchange: JSON Web Tokens are a good way of securely transmitting information between parties. Because JWTs can be signed—for example, using public/private key pairs—you can be sure the senders are who they say they are. Additionally, as the signature is calculated using the header and the payload, you can also verify that the content hasn&rsquo;t been tampered with.</p></blockquote>

<p>取自官網上的資訊，主要的目的就是身份驗證與資料交換</p>

<h2>What is the JSON Web Token structure?</h2>

<p>三個部分</p>

<ul>
<li>Header</li>
<li>Payload</li>
<li>Signature</li>
</ul>


<h3>Header</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "alg": "HS256",
</span><span class='line'>  "typ": "JWT"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>Payload</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "sub": "1234567890",
</span><span class='line'>  "name": "John Doe",
</span><span class='line'>  "admin": true
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<blockquote><p><a href="https://tools.ietf.org/html/rfc7519#section-4.1">Notice that the claim names are only three characters</a></p></blockquote>

<h3>Signature</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>HMACSHA256(
</span><span class='line'>  base64UrlEncode(header) + "." +
</span><span class='line'>  base64UrlEncode(payload),
</span><span class='line'>  secret)</span></code></pre></td></tr></table></div></figure>


<h1>參考資料</h1>

<ul>
<li><a href="https://jwt.io/introduction/">JWT</a></li>
<li><a href="https://auth0.com/blog/refresh-tokens-what-are-they-and-when-to-use-them/">Refresh Token</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization">HTTP Authorization</a></li>
<li><a href="https://auth0.com/blog/cookies-vs-tokens-definitive-guide/">Cookie vs Token</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Setup Eslint for RN]]></title>
    <link href="http://whhotw.github.io/blog/2018/02/08/sublime-setup-eslint-for-js/"/>
    <updated>2018-02-08T00:25:20+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/02/08/sublime-setup-eslint-for-js</id>
    <content type="html"><![CDATA[<p>我是使用 Sublime 3 的版本</p>

<h1>Install Sublime Package</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SublimeLinter // 先裝
</span><span class='line'>SublimeLinter-eslint</span></code></pre></td></tr></table></div></figure>


<h1>Manual</h1>

<p>or add on package.json</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yarn add eslint --dev
</span><span class='line'>yarn add eslint-config-airbnb --dev
</span><span class='line'>yarn add eslint-plugin-import --dev
</span><span class='line'>yarn add eslint-plugin-react --dev
</span><span class='line'>yarn add eslint-plugin-jsx-a11y --dev
</span><span class='line'>yarn add babel-eslint --dev</span></code></pre></td></tr></table></div></figure>


<h1>Create .eslintrc</h1>

<p>located on project root</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "parser": "babel-eslint",
</span><span class='line'>  "extends": "airbnb",
</span><span class='line'>  "rules": {
</span><span class='line'>    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
</span><span class='line'>    "react/prop-types": [1],
</span><span class='line'>    "no-unused-vars": [1],
</span><span class='line'>    "no-use-before-define": [1, { "functions": true, "classes": true }],
</span><span class='line'>  },
</span><span class='line'>  "globals": {
</span><span class='line'>    "fetch": true,
</span><span class='line'>    "__DEV__": true,
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<blockquote><p>可以自訂規則寫在 <code>rules</code> 0 代表關閉、1 代表警告、2代表錯誤</p></blockquote>

<p>上述步驟做完，重開 Sublime 即可看到效果</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RN 中使用 SVG]]></title>
    <link href="http://whhotw.github.io/blog/2018/02/05/rn-svg/"/>
    <updated>2018-02-05T10:43:32+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/02/05/rn-svg</id>
    <content type="html"><![CDATA[<h1>PNG、JPG</h1>

<p>在 <code>RN</code> 中載入圖片是非常容易的事情，可以使用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>require('./mypng.png')
</span><span class='line'>require('./myjpg.jpg')</span></code></pre></td></tr></table></div></figure>


<p>這類的<a href="https://facebook.github.io/react-native/docs/image.html#source">寫法</a></p>

<h1>SVG</h1>

<p>假如是想載入 <code>.svg</code> 的話，就需要第三方的套件幫忙，或是轉成字型檔載入，以下是我使用字型檔的方式</p>

<blockquote><p>什麼是SVG？最大的優點就是縮放不會失真，細節可以<a href="https://zh.wikipedia.org/wiki/%E5%8F%AF%E7%B8%AE%E6%94%BE%E5%90%91%E9%87%8F%E5%9C%96%E5%BD%A2">參考</a></p></blockquote>

<h1>React-Native-Vector-Icons</h1>

<h2>Install</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install react-native-vector-icons
</span><span class='line'>react-native link</span></code></pre></td></tr></table></div></figure>


<h2>Generate .ttf and .json by Fontello or Icomoon</h2>

<p><a href="http://fontello.com/">Fontello</a>，<a href="https://icomoon.io/app">Icomoon</a></p>

<h2>Link</h2>

<ul>
<li>將 <code>.ttf</code> 放到專案中的 <code>fonts</code> 資料夾裡</li>
<li>在 <code>package.json</code> 中加入 <code>"rnpm": { "assets": ["fonts"] }</code></li>
<li>執行 <code>react-native link</code></li>
</ul>


<h2>Import</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import { createIconSetFromFontello } from 'react-native-vector-icons';
</span><span class='line'>import fontelloConfig from './config.json';
</span><span class='line'>const Icon = createIconSetFromFontello(fontelloConfig);</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TCP 三次握手/四次握手]]></title>
    <link href="http://whhotw.github.io/blog/2018/01/31/tcp-san-ci-wo-shou-slash-si-ci-wo-shou/"/>
    <updated>2018-01-31T17:05:20+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/01/31/tcp-san-ci-wo-shou-slash-si-ci-wo-shou</id>
    <content type="html"><![CDATA[<p>建立連線 => 三次握手(圖中紅色框框)</p>


<p>結束連線 => 四次握手(圖中藍色框框)</p>


<p><img src="http://img.my.csdn.net/uploads/201108/7/0_131271823564Rx.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode #717. 1-bit and 2-bit Characters]]></title>
    <link href="http://whhotw.github.io/blog/2018/01/31/leetcode-number-717-1-bit-and-2-bit-characters/"/>
    <updated>2018-01-31T10:38:51+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/01/31/leetcode-number-717-1-bit-and-2-bit-characters</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>const len = bits.length - 1;
</span><span class='line'>let i = 0;
</span><span class='line'>while (i &lt; len) {
</span><span class='line'>    if (bits[i] === 0) {
</span><span class='line'>        i++;
</span><span class='line'>    } else if (bits[i] === 1) {
</span><span class='line'>        if (i + 1 === len) {
</span><span class='line'>            return false;
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        i += 2;
</span><span class='line'>    }
</span><span class='line'>}
</span><span class='line'>    
</span><span class='line'>return true;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode #581. Shortest Unsorted Continuous Subarray]]></title>
    <link href="http://whhotw.github.io/blog/2018/01/29/leetcode-number-581-shortest-unsorted-continuous-subarray/"/>
    <updated>2018-01-29T18:45:26+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/01/29/leetcode-number-581-shortest-unsorted-continuous-subarray</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>let n = nums.map((val) =&gt; val);
</span><span class='line'>nums.sort();
</span><span class='line'>    
</span><span class='line'>let l = 0;
</span><span class='line'>let r = n.length;
</span><span class='line'>    
</span><span class='line'>while (l &lt;= r) {
</span><span class='line'>    if (n[l] === nums[l]) {
</span><span class='line'>        l++;
</span><span class='line'>    } else if (n[r] === nums[r]) {
</span><span class='line'>        r--;
</span><span class='line'>    } else {
</span><span class='line'>        break;
</span><span class='line'>    }
</span><span class='line'>}
</span><span class='line'>    
</span><span class='line'>return l &gt; r ? 0 : r - l + 1;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[死結(Deadlock)]]></title>
    <link href="http://whhotw.github.io/blog/2018/01/29/si-jie/"/>
    <updated>2018-01-29T10:33:18+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/01/29/si-jie</id>
    <content type="html"><![CDATA[<p>死結(Deadlock)，只要以下四個條件都滿足就有死結</p>

<pre><code>* 這個資源不能同時給兩個人用
* 有一個人拿了一個資源，又想拿別人的資源
* 如果一個人占了茅坑不拉屎，占用資源很久，仍不能趕他走
* A等B，B等C，C等D，D又等A 等成一圈
</code></pre>

<p>要解決這種狀況有Avoid(預防)或避免(Prevent)兩種方式，破除以上四種其中一種即可</p>
]]></content>
  </entry>
  
</feed>
