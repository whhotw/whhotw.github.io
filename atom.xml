<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[wlog]]></title>
  <link href="http://whhotw.github.io/atom.xml" rel="self"/>
  <link href="http://whhotw.github.io/"/>
  <updated>2018-01-05T10:32:47+08:00</updated>
  <id>http://whhotw.github.io/</id>
  <author>
    <name><![CDATA[w]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Commit 空資料夾到 Git]]></title>
    <link href="http://whhotw.github.io/blog/2018/01/05/git-kong-zi-liao-jia/"/>
    <updated>2018-01-05T01:29:37+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/01/05/git-kong-zi-liao-jia</id>
    <content type="html"><![CDATA[<p>有些時候想要在 git 上 commit 一個空資料夾時，可以透過 .gitignore 的設定來做到。</p>

<h3>專案結構</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ tree -La 1
</span><span class='line'>.
</span><span class='line'>├── .git
</span><span class='line'>├── .gitignore
</span><span class='line'>├── README.md
</span><span class='line'>├── application
</span><span class='line'>├── assets
</span><span class='line'>├── index.php
</span><span class='line'>├── system
</span><span class='line'>└── vendor</span></code></pre></td></tr></table></div></figure>


<blockquote><p>假如你有一個空的資料夾，你是沒有辦法 commit 這個檔案到 git 上的，因此可以建立一個 .gitignore 在這個空的資料夾裡</p></blockquote>

<h3>新的專案結構</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ tree -La 1
</span><span class='line'>.
</span><span class='line'>├── .git
</span><span class='line'>├── .gitignore
</span><span class='line'>├── README.md
</span><span class='line'>├── application
</span><span class='line'>├── assets
</span><span class='line'>├── index.php
</span><span class='line'>├── system
</span><span class='line'>├── test
</span><span class='line'>│   └── .gitignore
</span><span class='line'>└── vendor</span></code></pre></td></tr></table></div></figure>


<blockquote><p>如此一來將可以 commit</p></blockquote>

<p>另外你假如想要保留一個 temp 資料夾在 git 上，你可以順便利用這個 .gitignore</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim test/.gitignore
</span><span class='line'>*
</span><span class='line'>!.gitignore</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 OSX 環境建置 Nginx+PHP]]></title>
    <link href="http://whhotw.github.io/blog/2017/12/18/"/>
    <updated>2017-12-18T16:14:50+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/12/</id>
    <content type="html"><![CDATA[<p>參考
<a href="https://gist.github.com/dtomasi/ab76d14338db82ec24a1fc137caff75b">https://gist.github.com/dtomasi/ab76d14338db82ec24a1fc137caff75b</a></p>

<h2>Install Commandline Tools</h2>

<p><code>$ xcode-select --install</code></p>

<h2>Install Nginx</h2>

<p><code>$ brew update</code></p>

<h3>After install run</h3>

<p><code>sudo nginx</code></p>

<h3>Configuration</h3>

<p><code>/usr/local/etc/nginx/nginx.conf</code></p>

<h3>Stop nginx service</h3>

<p><code>sudo nginx -s stop</code></p>

<h3>Reload nginx service</h3>

<p><code>sudo nginx -s reload</code></p>

<h3>Nginx.conf</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim /usr/local/etc/nginx/nginx.conf
</span><span class='line'>
</span><span class='line'>    server {
</span><span class='line'>        listen       8080;
</span><span class='line'>        server_name  localhost;
</span><span class='line'>
</span><span class='line'>        root   html;
</span><span class='line'>
</span><span class='line'>        location / {
</span><span class='line'>            try_files index.html /index.php;
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        location ~ \.php$ {
</span><span class='line'>            fastcgi_pass  127.0.0.1:9000;
</span><span class='line'>            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
</span><span class='line'>            include       fastcgi_params;
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        location ~ /\.ht {
</span><span class='line'>            deny  all;
</span><span class='line'>        }
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<h3>Install PHP56</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew tap homebrew/homebrew-php
</span><span class='line'>$ brew install --without-apache --without-fpm --without-mysql php56</span></code></pre></td></tr></table></div></figure>


<h3>php-fpm</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ php-fpm
</span><span class='line'>[18-Dec-2017 16:51:20] NOTICE: [pool www] 'user' directive is ignored when FPM is not running as root
</span><span class='line'>[18-Dec-2017 16:51:20] NOTICE: [pool www] 'group' directive is ignored when FPM is not running as root
</span><span class='line'>
</span><span class='line'>$sudo php-fpm</span></code></pre></td></tr></table></div></figure>


<blockquote><p>注意權限</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 OSX 環境下安裝 PHP Mcrypt 套件]]></title>
    <link href="http://whhotw.github.io/blog/2017/12/14/php-an-zhuang-mcrypt/"/>
    <updated>2017-12-14T11:09:46+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/12/14/php-an-zhuang-mcrypt</id>
    <content type="html"><![CDATA[<p>指令</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install mcrypt
</span><span class='line'>$ brew tap homebrew/homebrew-php
</span><span class='line'>$ brew install php56-mcrypt --without-homebrew-php</span></code></pre></td></tr></table></div></figure>


<blockquote><p>php.ini 加入 extension, 重啟 apache</p></blockquote>

<p>網路上找到的解決辦法</p>

<script src="https://gist.github.com/idleberg/24479f34dc5007e50d47.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[.htaccess 設定]]></title>
    <link href="http://whhotw.github.io/blog/2017/12/14/php-htaccess-she-ding/"/>
    <updated>2017-12-14T03:44:11+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/12/14/php-htaccess-she-ding</id>
    <content type="html"><![CDATA[<p>其實用 <code>PHP</code> 寫的東西不是很多，再加上一直都不算是網頁端的開發者，所以很多相關的知識其實不太熟悉，哈；目前台灣傳統的資訊公司（新創應該都是 <code>Node.js</code> 了），應該還是用 <code>PHP</code> 來開發網路應用，一來當然是廣大社群的力量（有問題 google 一下，基本上都能找到解法），很多很棒的第三方套件，再加上建置成本相對便宜的因素。最近民間友人拜託看一個 bug ，就當作工作之餘也摸一些網頁的東西，並且趁這次記錄一下。註：我是 OSX 的環境</p>

<h2>遇到 http 500 internal server error</h2>

<p>確定 apache 的模組有載入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim /etc/apache2/httpd.conf
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>LoadModule rewrite_module libexec/apache2/mod_rewrite.so
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<h2>開啟 .htaccess 功能</h2>

<p>類似這樣</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Directory "/myweb"&gt;
</span><span class='line'>  ...
</span><span class='line'>  AllowOverride all
</span><span class='line'>  ...
</span><span class='line'>&lt;/Directory&gt;</span></code></pre></td></tr></table></div></figure>


<h2>.htaccess 檔案內容</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;IfModule mod_rewrite.c&gt;
</span><span class='line'>    RewriteEngine on
</span><span class='line'>    RewriteBase /
</span><span class='line'>    #RewriteCond $1 !^(index\.php|assets|.*\.ipa|images|swf|uploads|js|css|assets|robots\.txt|$)
</span><span class='line'>    RewriteCond %{REQUEST_FILENAME} !-f
</span><span class='line'>    RewriteCond %{REQUEST_FILENAME} !-d
</span><span class='line'>    RewriteRule ^(.*)$ index.php?/$1 [L,QSA]
</span><span class='line'>&lt;/IfModule&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React-Native App Package 名稱設定]]></title>
    <link href="http://whhotw.github.io/blog/2017/12/13/react-native-app-package/"/>
    <updated>2017-12-13T15:43:29+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/12/13/react-native-app-package</id>
    <content type="html"><![CDATA[<p>建立 RN app 時設定 package 名稱</p>

<p><code>react-native init MyApp --package=com.xxx.myapp</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leetcode #2. Add Two Numbers]]></title>
    <link href="http://whhotw.github.io/blog/2017/11/28/leetcode-number-2-add-two-numbers/"/>
    <updated>2017-11-28T17:31:11+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/11/28/leetcode-number-2-add-two-numbers</id>
    <content type="html"><![CDATA[<p><em>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</em></p>

<p><em>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</em></p>

<p><em>Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8</em></p>

<blockquote><p>相加兩個 linked lists</p></blockquote>

<p>兩個 list 不一定會是等長，因此當沒有下一個節點的時候會新增一個假的節點，在下一回合檢查的時候 <code>if (!l1.next &amp;&amp; !l2.next)</code> 為真即最後回合。</p>

<p>PS. 處理進位問題不是很漂亮應該有更好的寫法！</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var addTwoNumbers = function(l1, l2) {
</span><span class='line'>    if (l1 && l2) { 
</span><span class='line'>        let val = l1.val + l2.val;
</span><span class='line'>        let l = new ListNode(val % 10);
</span><span class='line'>        
</span><span class='line'>        if (!l1.next && !l2.next) {
</span><span class='line'>            l.next = (val &gt; 9 ? new ListNode(1) : null);
</span><span class='line'>            return l;
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        if (!l1.next) {
</span><span class='line'>            l1.next = new ListNode(0);
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        if (!l2.next) {
</span><span class='line'>            l2.next = new ListNode(0);
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        if (val &gt; 9) {
</span><span class='line'>            if (l1.next) {
</span><span class='line'>                l1.next.val++;    
</span><span class='line'>            } else {
</span><span class='line'>                l1.next = new ListNode(1);
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        l.next = addTwoNumbers(l1.next, l2.next);    
</span><span class='line'>        return l;
</span><span class='line'>    } else {
</span><span class='line'>        return null;
</span><span class='line'>    }
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leetcode #102. Binary Tree Level Order Traversal]]></title>
    <link href="http://whhotw.github.io/blog/2017/11/27/leetcode-number-102-binary-tree-level-order-traversal/"/>
    <updated>2017-11-27T13:30:41+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/11/27/leetcode-number-102-binary-tree-level-order-traversal</id>
    <content type="html"><![CDATA[<p>分層印出二元樹的元素，自己寫了遞迴的方式，紀錄一下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>let toArray = (root, arr, level, idx) =&gt; {
</span><span class='line'>    if (!root) {
</span><span class='line'>        return null;
</span><span class='line'>    } else {
</span><span class='line'>        if (!arr[level]) {
</span><span class='line'>            arr[level] = [];
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        arr[level].push(root.val);
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    toArray(root.left, arr, level + 1, idx * 2);
</span><span class='line'>    toArray(root.right, arr, level + 1, idx * 2 + 1);
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS App 打包用的指令]]></title>
    <link href="http://whhotw.github.io/blog/2017/11/23/ios-app-da-bao-zhi-ling/"/>
    <updated>2017-11-23T15:30:49+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/11/23/ios-app-da-bao-zhi-ling</id>
    <content type="html"><![CDATA[<p>自動打包這件事情，在很多時候可以幫助開發者，節省很多的等待時間。簡單來說就是開始執行你就可以不用管了，之後的產出甚至可以結合自動測試，發布等等。這邊單純分享打包用的指令</p>

<h3>Archive</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ xcodebuild -workspace ${PROJECT_NAME}.xcworkspace -scheme ${TARGET_NAME} -sdk iphoneos -configuration archive -archivePath $PWD/build/${TARGET_NAME}.xcarchive</span></code></pre></td></tr></table></div></figure>


<h3>Export *.ipa</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ xcodebuild -exportArchive -archivePath $PWD/build/${TARGET_NAME}.xcarchive -exportOptionsPlist BUILD.plist -exportPath $PWD/build</span></code></pre></td></tr></table></div></figure>


<h3>BUILD.plist</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat BUILD.plist
</span><span class='line'>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
</span><span class='line'>&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
</span><span class='line'>&lt;plist version="1.0"&gt;
</span><span class='line'>&lt;dict&gt;
</span><span class='line'>        &lt;key&gt;teamID&lt;/key&gt;
</span><span class='line'>        &lt;string&gt;${TEAM_ID}&lt;/string&gt;
</span><span class='line'>        &lt;key&gt;method&lt;/key&gt;
</span><span class='line'>        &lt;string&gt;${METHOD}&lt;/string&gt;
</span><span class='line'>        &lt;key&gt;uploadSymbols&lt;/key&gt;
</span><span class='line'>        &lt;true/&gt;
</span><span class='line'>        &lt;key&gt;compileBitcode&lt;/key&gt;
</span><span class='line'>        &lt;true/&gt;
</span><span class='line'>&lt;/dict&gt;
</span><span class='line'>&lt;/plist&gt;</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Xcode8.3 以上透過 command-line 輸出 ipa 需要打入 <code>exportOptionsPlist</code> 這個鍵值，因此需要多配置一個檔案類似如上</p></blockquote>

<ul>
<li>method: (String) The method of distribution, which can be set as any of the following:

<ul>
<li>app-store</li>
<li>enterprise</li>
<li>ad-hoc</li>
<li>development</li>
</ul>
</li>
<li>teamID: (String) The development program team identifier.</li>
<li>uploadSymbols: (Boolean) Option to include symbols in the generated ipa file.</li>
<li>uploadBitcode: (Boolean) Option to include Bitcode.</li>
</ul>


<h3>我自己寫的 Shell Script</h3>

<script src="https://gist.github.com/whhotw/b1d12e06844cbf08ae7dfa088e306fad.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git 設定忽略自簽憑證]]></title>
    <link href="http://whhotw.github.io/blog/2017/11/21/git-she-ding-hu-lue-zi-qian-ping-zheng/"/>
    <updated>2017-11-21T17:07:54+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/11/21/git-she-ding-hu-lue-zi-qian-ping-zheng</id>
    <content type="html"><![CDATA[<p>公司的 git server 為了安全性有掛上自簽憑證，但是 git <code>http.sslVerify</code> 預設 <code>true</code> 因此會無法上傳 code，這時候可以手動修改 <code>http.sslVerify</code> 這個值</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global http.sslVerify false</span></code></pre></td></tr></table></div></figure>


<p>想要安全一些的話就設定自簽憑證路徑</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --system http.sslCAPath /path/to/cacerts</span></code></pre></td></tr></table></div></figure>


<p>以上兩種都可行</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Js 動態載入模組]]></title>
    <link href="http://whhotw.github.io/blog/2017/11/20/mo-zu/"/>
    <updated>2017-11-20T15:53:41+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/11/20/mo-zu</id>
    <content type="html"><![CDATA[<p>兩個關鍵字 <code>import</code> <code>export</code>，用於載入與輸出模組。但實際上不一定會使用到模組的程式碼，這時候就需要動態載入，在確定需要使用的時候載入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export let go = () =&gt; {
</span><span class='line'>  return 'AAA';
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>async () =&gt; {
</span><span class='line'>  let Module = await import('./Module.js');
</span><span class='line'>  console.log(Module.go());
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>輸出</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>AAA</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leetcode #357. Count Numbers With Unique Digits]]></title>
    <link href="http://whhotw.github.io/blog/2017/11/16/leetcode-number-357-count-numbers-with-unique-digits/"/>
    <updated>2017-11-16T14:44:14+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/11/16/leetcode-number-357-count-numbers-with-unique-digits</id>
    <content type="html"><![CDATA[<p><em>Given a non-negative integer n, count all numbers with unique digits, x, where 0 ≤ x &lt; 10n.
Example:
Given n = 2, return 91. (The answer should be the total numbers in the range of 0 ≤ x &lt; 100, excluding [11,22,33,44,55,66,77,88,99])</em></p>

<p>起初用暴力解但效率只能到達 n=6, 以上就會 time limit exceeded</p>

<p><strong>我自己想的解法</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var countNumbersWithUniqueDigits = function(n) {
</span><span class='line'>    console.log(Math.pow(10, n));
</span><span class='line'>    let maxNum = Math.pow(10, n);
</span><span class='line'>    let count = 0;
</span><span class='line'>    for (let i = 10; i &lt; maxNum; i++) {
</span><span class='line'>        let arr = i.toString().split('');
</span><span class='line'>        let set = new Set(arr);
</span><span class='line'>        if (arr.length !== set.size) {
</span><span class='line'>            count++;
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    return maxNum - count;
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p><strong>參考解答後優化的解法</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var countNumbersWithUniqueDigits = function(n) {
</span><span class='line'>    if (n === 0) {
</span><span class='line'>        return 1;
</span><span class='line'>    } else {
</span><span class='line'>        let v = 9;
</span><span class='line'>        for (let i = 1; i &lt; n; i++) {
</span><span class='line'>            v *= (11 - i - 1);
</span><span class='line'>        }
</span><span class='line'>        
</span><span class='line'>        return countNumbersWithUniqueDigits(n - 1) + v;
</span><span class='line'>    }
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p>主要是運用動態規劃的方式</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>f(1)=f(0)+9
</span><span class='line'>f(2)=f(1)+9*9
</span><span class='line'>f(3)=f(2)+9*9*8
</span><span class='line'>...
</span><span class='line'>f(9)=f(8)+9*8*7*6*5*4*3*2
</span><span class='line'>f(10)=f(9)+9*8*7*6*5*4*3*2*1</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CLI 方式啟動 Android 模擬器]]></title>
    <link href="http://whhotw.github.io/blog/2017/11/02/cli-fang-shi-qi-dong-android-mo-ni-qi/"/>
    <updated>2017-11-02T17:18:48+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/11/02/cli-fang-shi-qi-dong-android-mo-ni-qi</id>
    <content type="html"><![CDATA[<p><a href="https://developer.android.com/studio/run/emulator-commandline.html">android-emulator-commandline</a></p>

<p><a href="https://developer.android.com/studio/command-line/avdmanager.html">avdmanager-commandline</a></p>

<p>List avd</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./avdmanager list avd
</span><span class='line'>Available Android Virtual Devices:
</span><span class='line'>    Name: Pixel_API_25
</span><span class='line'>  Device: pixel (Google)
</span><span class='line'>    Path: /Users/whh/.android/avd/Pixel_API_25.avd
</span><span class='line'>  Target: Google APIs (Google Inc.)
</span><span class='line'>          Based on: Android 7.1.1 (Nougat) Tag/ABI: google_apis/x86_64
</span><span class='line'>    Skin: pixel
</span><span class='line'>  Sdcard: 100M</span></code></pre></td></tr></table></div></figure>


<p>Run android emulator</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ${ANDROID_HOME}/tools
</span><span class='line'>emulator @${YOUR_AVD_NAME}</span></code></pre></td></tr></table></div></figure>


<p>List of devices attached</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adb devices
</span><span class='line'>List of devices attached
</span><span class='line'>emulator-5554 device</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reactotron 使用]]></title>
    <link href="http://whhotw.github.io/blog/2017/11/01/reactotron-shi-yong/"/>
    <updated>2017-11-01T16:27:58+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/11/01/reactotron-shi-yong</id>
    <content type="html"><![CDATA[<h3><a href="https://github.com/infinitered/reactotron">Reactotron</a></h3>

<p>開發 React 應用的時候，可以試試這個工具。可以觀察網路連線的資訊還可以印出自定義的日誌</p>

<p>import 下面這行到你要用的地方
<code>import Reactotron from 'reactotron-react-js'</code></p>

<p>預設有三種等級可以選擇</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Reactotron.log('log')
</span><span class='line'>Reactotron.warn('warn')
</span><span class='line'>Reactotron.error('error')</span></code></pre></td></tr></table></div></figure>


<p>也可以印出物件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Reactotron.display({
</span><span class='line'>  name: 'ORANGE',
</span><span class='line'>  preview: 'Who?',
</span><span class='line'>  value: 'Orange you glad you don\'t know me in real life?',
</span><span class='line'>  important: true
</span><span class='line'>})</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[定期執行SQL語法]]></title>
    <link href="http://whhotw.github.io/blog/2017/10/12/ding-qi-zhi-xing-sqlyu-fa-and-ji-song-you-jian/"/>
    <updated>2017-10-12T15:08:30+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/10/12/ding-qi-zhi-xing-sqlyu-fa-and-ji-song-you-jian</id>
    <content type="html"><![CDATA[<h3>設定 mysql event schedule</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CREATE EVENT `&lt;table_name&gt;`.`&lt;event_name&gt;`
</span><span class='line'>ON SCHEDULE EVERY 1 YEAR
</span><span class='line'>ON COMPLETION PRESERVE
</span><span class='line'>ENABLE
</span><span class='line'>DO
</span><span class='line'>insert into field('b') values(now())</span></code></pre></td></tr></table></div></figure>


<p><code>DO</code> 後面就是接一般的 <code>SQL</code> 語法新增，刪除，修改等</p>

<h3>顯示 event schedule</h3>

<p><code>mysql&gt; show processlist;</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ignore Self Signed Cert on React-Native App]]></title>
    <link href="http://whhotw.github.io/blog/2017/10/05/ignore-self-signed-cert-on-react-native-app/"/>
    <updated>2017-10-05T11:06:00+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/10/05/ignore-self-signed-cert-on-react-native-app</id>
    <content type="html"><![CDATA[<p><img src="http://whhotw.github.io/assets/Simulator%20Screen%20Shot%20Oct%205%2C%202017%2C%2011.19.10%20AM.png" width="360" height="640"></p>

<p>RN 裡面是不接受自簽憑證的，但是往往在開發環境中，有些時候還是會用到自簽憑證，這時候就會變得很麻煩，因為寫程式的時候等於不能跑在測試環境，這時候就可以新增 <code>NSURLRequest</code> 的 category 讓網路連線可以通過 <code>https</code> 的錯誤</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>+ (BOOL)allowsAnyHTTPSCertificateForHost:(NSString *)host {
</span><span class='line'>  return YES;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How About Push Large Size File to Git]]></title>
    <link href="http://whhotw.github.io/blog/2017/09/29/how-about-push-large-size-file-to-git/"/>
    <updated>2017-09-29T10:36:15+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/09/29/how-about-push-large-size-file-to-git</id>
    <content type="html"><![CDATA[<p>想要上傳超過 100MB 的檔案到 Git 被 rejected 的解法</p>

<h3>安裝</h3>

<p><code>brew install git-lfs</code></p>

<h3>操作</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ${project}
</span><span class='line'>git lfs install
</span><span class='line'>git lfs track "*.ext" =&gt; 依副檔名
</span><span class='line'>git add file.ext
</span><span class='line'>git commit -m "something..."
</span><span class='line'>git push origin master</span></code></pre></td></tr></table></div></figure>


<p>關鍵是 <code>track</code> 某個檔案或是資料夾，可以利用 <code>git lfs ls-files</code> 查看哪些檔案被追蹤</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git lfs ls-files
</span><span class='line'>74015d7b01 * src/ios/xxx</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JS RSA 加密/簽名]]></title>
    <link href="http://whhotw.github.io/blog/2017/09/26/js-rsa-jia-mi-slash-qian-ming/"/>
    <updated>2017-09-26T11:14:39+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/09/26/js-rsa-jia-mi-slash-qian-ming</id>
    <content type="html"><![CDATA[<p>大致上的流程就是伺服端生成公私鑰對後，將公鑰儲存在前端。登入時利用公鑰將敏感資料加密傳送給後端。通常我會習慣轉成 base64 後才傳給後端</p>

<p>先安裝 <code>jsrsasign</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import rs from 'jsrsasign';
</span><span class='line'>
</span><span class='line'>let pub = rs.KEYUTIL.getKey(file);
</span><span class='line'>let cipher = rs.KJUR.crypto.Cipher.encrypt(this.state.passwd, pub, 'RSA');
</span><span class='line'>return rs.hextob64(cipher);</span></code></pre></td></tr></table></div></figure>


<p>getKey() 裡面放要使用的鑰匙資訊，像我是透過 <code>pem</code> 所以會從檔案中把資訊取出來。 可以使用 <code>react-native-fs</code> 存取檔案系統</p>

<p>一開始以為可以透過類似讀圖片的方式 <code>require('url')</code> 得到憑證檔案，因為自己的想法是，假如要先手動把一些自定義的檔案放入個別的系統，真的很麻煩。經過了一個下午的努力與 google 的結果，似乎除了圖片目前還沒有自動連結實體檔案的方法，下次有時間研究一下 <code>rnpm link</code> 是怎麼做的！雖然是針對套件不過應該可以自己寫個 script 解決我這個問題</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React Native - 讓安卓返回鍵失效]]></title>
    <link href="http://whhotw.github.io/blog/2017/09/20/react-native-rang-an-zhuo-fan-hui-jian-shi-xiao/"/>
    <updated>2017-09-20T17:28:47+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/09/20/react-native-rang-an-zhuo-fan-hui-jian-shi-xiao</id>
    <content type="html"><![CDATA[<p>設定 <code>overrideBackPress=true</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>this.props.navigator.showLightBox({
</span><span class='line'>    screen: '',
</span><span class='line'>    passProps: {},
</span><span class='line'>    style: {},
</span><span class='line'>    overrideBackPress: true
</span><span class='line'>});</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Local Plugin to Cordova Project]]></title>
    <link href="http://whhotw.github.io/blog/2017/09/14/install-local-plugin-to-cordova-project/"/>
    <updated>2017-09-14T17:35:19+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/09/14/install-local-plugin-to-cordova-project</id>
    <content type="html"><![CDATA[<p>use it.
<code>plugman install --platform ios --project path/to/your/ionicapp/platforms/android --plugin /Path/to/your/cordova-plugin/MyDemo/</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React Native - Setting onMessage on a WebView Overrides Existing Values of window.postMessage]]></title>
    <link href="http://whhotw.github.io/blog/2017/09/13/react-native-setting-onmessage-on-a-webview-overrides-existing-values-of-window-dot-postmessage/"/>
    <updated>2017-09-13T15:56:07+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/09/13/react-native-setting-onmessage-on-a-webview-overrides-existing-values-of-window-dot-postmessage</id>
    <content type="html"><![CDATA[<p>最近在玩 React Native 遇到的一個問題。假如想讓 WebView 與 React Native 溝通的話可以用 <code>onMessage</code> 這個介面，但是假如原本的網頁內容你不確定怎麼寫的，可能會遇到 <code>Setting onMessage on a WebView overrides existing values of window.postMessage</code>
這樣的錯誤訊息，搜尋了一下解法，紀錄一下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>const patchPostMessageFunction = () =&gt; {
</span><span class='line'>  const originalPostMessage = window.postMessage;
</span><span class='line'>
</span><span class='line'>  const patchedPostMessage = (message, targetOrigin, transfer) =&gt; {
</span><span class='line'>    originalPostMessage(message, targetOrigin, transfer);
</span><span class='line'>  };
</span><span class='line'>
</span><span class='line'>  patchedPostMessage.toString = () =&gt; String(Object.hasOwnProperty).replace('hasOwnProperty', 'postMessage');
</span><span class='line'>
</span><span class='line'>  window.postMessage = patchedPostMessage;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>const patchPostMessageJsCode = `(${String(patchPostMessageFunction)})();`;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
