<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Leetcode | wlog]]></title>
  <link href="http://whhotw.github.io/blog/categories/leetcode/atom.xml" rel="self"/>
  <link href="http://whhotw.github.io/"/>
  <updated>2020-05-22T02:46:56+08:00</updated>
  <id>http://whhotw.github.io/</id>
  <author>
    <name><![CDATA[w]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[#Leetcode 88. Merge Sorted Array]]></title>
    <link href="http://whhotw.github.io/blog/2020/05/22/merge-sorted-array/"/>
    <updated>2020-05-22T02:45:22+08:00</updated>
    <id>http://whhotw.github.io/blog/2020/05/22/merge-sorted-array</id>
    <content type="html"><![CDATA[<p>曾經面試時被問到過。</p>

<pre><code>var merge = function(nums1, m, nums2, n) {
    while(m + n &gt; 0) {
        if (n &lt;= 0) {
            break;
        }
        nums1[m + n - 1] = (nums1[m - 1] &gt;= nums2[n - 1]) ? nums1[--m] : nums2[--n];
    }
};
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[經典面試題-翻轉二元樹]]></title>
    <link href="http://whhotw.github.io/blog/2020/04/28/jing-dian-mian-shi-ti-fan-zhuan-er-yuan-shu/"/>
    <updated>2020-04-28T02:47:51+08:00</updated>
    <id>http://whhotw.github.io/blog/2020/04/28/jing-dian-mian-shi-ti-fan-zhuan-er-yuan-shu</id>
    <content type="html"><![CDATA[<pre><code>var invertTree = function(root) {
    if (root == null) return root;
    const tmp = root.left;
    root.left = invertTree(root.right);
    root.right = invertTree(tmp);
    return root;
};
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode #23 Merge K Sorted Lists]]></title>
    <link href="http://whhotw.github.io/blog/2018/10/04/leetcode-number-23-merge-k-sorted-lists/"/>
    <updated>2018-10-04T11:49:46+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/10/04/leetcode-number-23-merge-k-sorted-lists</id>
    <content type="html"><![CDATA[<p>240ms 差強人意</p>

<pre><code>var mergeKLists = function(lists) {
    lists = lists.filter(list =&gt; list);

    if (lists.length === 0) {
        return null;
    }

    const list = new ListNode();
    let next = list;

    while (lists.length &gt; 0) {
        let min = 0;

        for (let i = 0; i &lt; lists.length; i++) {
            if (lists[i] &amp;&amp; lists[i].val &lt; lists[min].val) {
                min = i;
            }
        }

        next.val = lists[min].val;
        lists[min] = lists[min].next;

        if (!lists[min]) {
            lists.splice(min, 1);
        }

        if (lists.length &gt; 0) {
            next.next = new ListNode();
            next = next.next;
        }
    }

    return list;
};
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode #206 Reverse Linked List]]></title>
    <link href="http://whhotw.github.io/blog/2018/09/26/leetcode-number-206-reverse-linked-list/"/>
    <updated>2018-09-26T16:01:35+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/09/26/leetcode-number-206-reverse-linked-list</id>
    <content type="html"><![CDATA[<p>面試經典題</p>

<pre><code>var reverseList = function(head) {
    let prev = null;
    let curr = head;
    let next = null;
    while (curr) {
        next = curr.next;
        curr.next = prev;
        prev = curr;
        curr = next;
    } 

    return prev;
};
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode #766 Toeplitz Matrix]]></title>
    <link href="http://whhotw.github.io/blog/2018/09/18/leetcode-number-766-toeplitz-matrix/"/>
    <updated>2018-09-18T18:58:19+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/09/18/leetcode-number-766-toeplitz-matrix</id>
    <content type="html"><![CDATA[<pre><code>var isToeplitzMatrix = function(matrix) {
    let a = true;
    for (let i = 0; i &lt; matrix.length; i++) {
        let j = 0;
        while (j + 1 &lt; matrix[i].length &amp;&amp; i + 1 &lt; matrix.length) {
            console.log(i + 1, j + 1);
            if (matrix[i][j] !== matrix[i + 1][j + 1]) {
                a = false;
            }

            j++;
        }
    }

    return a;
};
</code></pre>
]]></content>
  </entry>
  
</feed>
