<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: React-native | wlog]]></title>
  <link href="http://whhotw.github.io/blog/categories/react-native/atom.xml" rel="self"/>
  <link href="http://whhotw.github.io/"/>
  <updated>2018-02-05T11:04:46+08:00</updated>
  <id>http://whhotw.github.io/</id>
  <author>
    <name><![CDATA[w]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RN 中使用 SVG]]></title>
    <link href="http://whhotw.github.io/blog/2018/02/05/rn-svg/"/>
    <updated>2018-02-05T10:43:32+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/02/05/rn-svg</id>
    <content type="html"><![CDATA[<h1>PNG、JPG</h1>

<p>在 <code>RN</code> 中載入圖片是非常容易的事情，可以使用</p>

<pre><code>require('./mypng.png')
require('./myjpg.jpg')
</code></pre>

<p>這類的<a href="https://facebook.github.io/react-native/docs/image.html#source">寫法</a></p>

<h1>SVG</h1>

<p>假如是想載入 <code>.svg</code> 的話，就需要第三方的套件幫忙，或是轉成字型檔載入，以下是我使用字型檔的方式</p>

<blockquote><p>什麼是SVG？最大的優點就是縮放不會失真，細節可以<a href="https://zh.wikipedia.org/wiki/%E5%8F%AF%E7%B8%AE%E6%94%BE%E5%90%91%E9%87%8F%E5%9C%96%E5%BD%A2">參考</a></p></blockquote>

<h1>React-Native-Vector-Icons</h1>

<h2>Install</h2>

<pre><code>npm install react-native-vector-icons
react-native link
</code></pre>

<h2>Generate .ttf and .json by Fontello or Icomoon</h2>

<p><a href="http://fontello.com/">Fontello</a>，<a href="https://icomoon.io/app">Icomoon</a></p>

<h2>Link</h2>

<ul>
<li>將 <code>.ttf</code> 放到專案中的 <code>fonts</code> 資料夾裡</li>
<li>在 <code>package.json</code> 中加入 <code>"rnpm": { "assets": ["fonts"] }</code></li>
<li>執行 <code>react-native link</code></li>
</ul>


<h2>Import</h2>

<pre><code>import { createIconSetFromFontello } from 'react-native-vector-icons';
import fontelloConfig from './config.json';
const Icon = createIconSetFromFontello(fontelloConfig);
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React-Native 開發環境]]></title>
    <link href="http://whhotw.github.io/blog/2018/01/25/react-native-kai-fa-huan-jing/"/>
    <updated>2018-01-25T10:58:08+08:00</updated>
    <id>http://whhotw.github.io/blog/2018/01/25/react-native-kai-fa-huan-jing</id>
    <content type="html"><![CDATA[<p><a href="https://facebook.github.io/react-native/docs/getting-started.html">React-Native Getting Started</a></p>

<h3>Homebrew</h3>

<p><a href="https://brew.sh">安裝</a> OSX 的套件管理包</p>

<pre><code>▶ brew -v
Homebrew 1.4.3
Homebrew/homebrew-core (git revision a76c8; last commit 2018-01-11)
</code></pre>

<h3>Node</h3>

<pre><code>brew install node
▶ node -v
v8.9.4
</code></pre>

<h3>Watchman</h3>

<p>追蹤檔案的變化</p>

<pre><code>brew inatall watchman
▶ watchman -v
4.9.0
</code></pre>

<h3>Command-Line</h3>

<p>指令工具用於創建專案，初始化，更新，打包服務等任務</p>

<pre><code>npm install react-native-cli
▶ react-native -v
react-native-cli: 2.0.1
</code></pre>

<h3>Flow、Yarn</h3>

<p>檢查 <code>JavaScript</code> 語法錯誤與更高效能的第三方套件管理工具，可取代 <code>npm</code></p>

<pre><code>brew install flow
npm install -g yarn 
▶ yarn -v
1.3.2
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React-Native Init App]]></title>
    <link href="http://whhotw.github.io/blog/2017/12/13/react-native-app-package/"/>
    <updated>2017-12-13T15:43:29+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/12/13/react-native-app-package</id>
    <content type="html"><![CDATA[<pre><code>$ react-naitve init MyApp

// 指定版本
$ react-naitve init MyApp --version 0.49.0
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ignore Self Signed Cert on React Native App]]></title>
    <link href="http://whhotw.github.io/blog/2017/10/05/ignore-self-signed-cert-on-react-native-app/"/>
    <updated>2017-10-05T11:06:00+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/10/05/ignore-self-signed-cert-on-react-native-app</id>
    <content type="html"><![CDATA[<p><img src="/assets/Simulator%20Screen%20Shot%20Oct%205%2C%202017%2C%2011.19.10%20AM.png" width="360" height="640"></p>

<p>RN 裡面是不接受自簽憑證的，但是往往在開發環境中，有些時候還是會用到自簽憑證，這時候就會變得很麻煩，因為寫程式的時候等於不能跑在測試環境，這時候就可以新增 <code>NSURLRequest</code> 的 category 讓網路連線可以通過 <code>https</code> 的錯誤</p>

<pre><code>+ (BOOL)allowsAnyHTTPSCertificateForHost:(NSString *)host {
  return YES;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React Native - 讓安卓返回鍵失效]]></title>
    <link href="http://whhotw.github.io/blog/2017/09/20/react-native-rang-an-zhuo-fan-hui-jian-shi-xiao/"/>
    <updated>2017-09-20T17:28:47+08:00</updated>
    <id>http://whhotw.github.io/blog/2017/09/20/react-native-rang-an-zhuo-fan-hui-jian-shi-xiao</id>
    <content type="html"><![CDATA[<p>設定 <code>overrideBackPress=true</code></p>

<pre><code>this.props.navigator.showLightBox({
    screen: '',
    passProps: {},
    style: {},
    overrideBackPress: true
});
</code></pre>
]]></content>
  </entry>
  
</feed>
